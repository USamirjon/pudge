import React, { useState } from 'react';
import axios from 'axios';

function GiveData() {
    const [accurate, setAccurate] = useState(true); // —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞

    const handleDownload = async () => {
        const token = localStorage.getItem('token'); // –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω

        if (!token) {
            alert('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ö–æ–¥.');
            return;
        }

        try {
            const response = await axios.get(`https://localhost:7137/api/Analytics/generate-report?accurate=${accurate}`, {
                responseType: 'blob',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Accept': '*/*'
                }
            });

            const url = window.URL.createObjectURL(new Blob([response.data]));
            const link = document.createElement('a');
            link.href = url;
            link.setAttribute('download', 'AnalyticsReport.xlsx');
            document.body.appendChild(link);
            link.click();
            link.remove();
            window.URL.revokeObjectURL(url);

            alert('–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç.');
        }
    };

    const handleToggle = () => {
        setAccurate(prev => !prev); // –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º accurate
    };

    return (
        <div className="container mt-4 text-center">
            <h2>üìä –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç</h2>

            <div className="form-check form-switch my-4">
                <input
                    className="form-check-input"
                    type="checkbox"
                    id="accurateSwitch"
                    checked={accurate}
                    onChange={handleToggle}
                />
                <label className="form-check-label" htmlFor="accurateSwitch">
                    –¢–æ—á–Ω–æ—Å—Ç—å: {accurate ? '–í–∫–ª—é—á–µ–Ω–∞ (true)' : '–í—ã–∫–ª—é—á–µ–Ω–∞ (false)'}
                </label>
            </div>

            <button className="btn btn-primary mt-3" onClick={handleDownload}>
                –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç
            </button>
        </div>
    );
}

export default GiveData;
